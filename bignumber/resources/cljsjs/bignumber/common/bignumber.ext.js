/**********************************************************************
 * Extern for BigNumber 4.1.0
 * http://mikemcl.github.io/bignumber.js/
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var BigNumber = {
  "BigNumber": {
    "BigNumber": function () {},
    "EUCLID": {},
    "ROUND_CEIL": {},
    "ROUND_DOWN": {},
    "ROUND_FLOOR": {},
    "ROUND_HALF_CEIL": {},
    "ROUND_HALF_DOWN": {},
    "ROUND_HALF_EVEN": {},
    "ROUND_HALF_FLOOR": {},
    "ROUND_HALF_UP": {},
    "ROUND_UP": {},
    "another": function () {},
    "config": function () {},
    "default": function () {},
    "max": function () {},
    "min": function () {},
    "random": function () {},
    "set": function () {}
  },
  "EUCLID": {},
  "ROUND_CEIL": {},
  "ROUND_DOWN": {},
  "ROUND_FLOOR": {},
  "ROUND_HALF_CEIL": {},
  "ROUND_HALF_DOWN": {},
  "ROUND_HALF_EVEN": {},
  "ROUND_HALF_FLOOR": {},
  "ROUND_HALF_UP": {},
  "ROUND_UP": {},
  "another": function () {},
  "config": function () {},
  "default": {
    "BigNumber": function () {},
    "EUCLID": {},
    "ROUND_CEIL": {},
    "ROUND_DOWN": {},
    "ROUND_FLOOR": {},
    "ROUND_HALF_CEIL": {},
    "ROUND_HALF_DOWN": {},
    "ROUND_HALF_EVEN": {},
    "ROUND_HALF_FLOOR": {},
    "ROUND_HALF_UP": {},
    "ROUND_UP": {},
    "another": function () {},
    "config": function () {},
    "default": function () {},
    "max": function () {},
    "min": function () {},
    "random": function () {},
    "set": function () {}
  },
  "max": function () {},
  "min": function () {},
  "random": function () {},
  "set": function () {}
};
BigNumber.prototype = {
  "abs": function () {},
  "absoluteValue": function () {},
  "add": function () {},
  "ceil": function () {},
  "cmp": function () {},
  "comparedTo": function () {},
  "decimalPlaces": function () {},
  "div": function () {},
  "divToInt": function () {},
  "dividedBy": function () {},
  "dividedToIntegerBy": function () {},
  "dp": function () {},
  "eq": function () {},
  "equals": function () {},
  "floor": function () {},
  "greaterThan": function () {},
  "greaterThanOrEqualTo": function () {},
  "gt": function () {},
  "gte": function () {},
  "isBigNumber": function () {},
  "isFinite": function () {},
  "isInt": function () {},
  "isInteger": function () {},
  "isNaN": function () {},
  "isNeg": function () {},
  "isNegative": function () {},
  "isZero": function () {},
  "lessThan": function () {},
  "lessThanOrEqualTo": function () {},
  "lt": function () {},
  "lte": function () {},
  "minus": function () {},
  "mod": function () {},
  "modulo": function () {},
  "mul": function () {},
  "neg": function () {},
  "negated": function () {},
  "plus": function () {},
  "pow": function () {},
  "precision": function () {},
  "round": function () {},
  "sd": function () {},
  "shift": function () {},
  "sqrt": function () {},
  "squareRoot": function () {},
  "sub": function () {},
  "times": function () {},
  "toDigits": function () {},
  "toExponential": function () {},
  "toFixed": function () {},
  "toFormat": function () {},
  "toFraction": function () {},
  "toJSON": function () {},
  "toNumber": function () {},
  "toPower": function () {},
  "toPrecision": function () {},
  "toString": function () {},
  "trunc": function () {},
  "truncated": function () {},
  "valueOf": function () {}
};
BigNumber.BigNumber.prototype = {
  "abs": function () {},
  "absoluteValue": function () {},
  "add": function () {},
  "ceil": function () {},
  "cmp": function () {},
  "comparedTo": function () {},
  "decimalPlaces": function () {},
  "div": function () {},
  "divToInt": function () {},
  "dividedBy": function () {},
  "dividedToIntegerBy": function () {},
  "dp": function () {},
  "eq": function () {},
  "equals": function () {},
  "floor": function () {},
  "greaterThan": function () {},
  "greaterThanOrEqualTo": function () {},
  "gt": function () {},
  "gte": function () {},
  "isBigNumber": function () {},
  "isFinite": function () {},
  "isInt": function () {},
  "isInteger": function () {},
  "isNaN": function () {},
  "isNeg": function () {},
  "isNegative": function () {},
  "isZero": function () {},
  "lessThan": function () {},
  "lessThanOrEqualTo": function () {},
  "lt": function () {},
  "lte": function () {},
  "minus": function () {},
  "mod": function () {},
  "modulo": function () {},
  "mul": function () {},
  "neg": function () {},
  "negated": function () {},
  "plus": function () {},
  "pow": function () {},
  "precision": function () {},
  "round": function () {},
  "sd": function () {},
  "shift": function () {},
  "sqrt": function () {},
  "squareRoot": function () {},
  "sub": function () {},
  "times": function () {},
  "toDigits": function () {},
  "toExponential": function () {},
  "toFixed": function () {},
  "toFormat": function () {},
  "toFraction": function () {},
  "toJSON": function () {},
  "toNumber": function () {},
  "toPower": function () {},
  "toPrecision": function () {},
  "toString": function () {},
  "trunc": function () {},
  "truncated": function () {},
  "valueOf": function () {}
};
BigNumber.default.prototype = {
  "abs": function () {},
  "absoluteValue": function () {},
  "add": function () {},
  "ceil": function () {},
  "cmp": function () {},
  "comparedTo": function () {},
  "decimalPlaces": function () {},
  "div": function () {},
  "divToInt": function () {},
  "dividedBy": function () {},
  "dividedToIntegerBy": function () {},
  "dp": function () {},
  "eq": function () {},
  "equals": function () {},
  "floor": function () {},
  "greaterThan": function () {},
  "greaterThanOrEqualTo": function () {},
  "gt": function () {},
  "gte": function () {},
  "isBigNumber": function () {},
  "isFinite": function () {},
  "isInt": function () {},
  "isInteger": function () {},
  "isNaN": function () {},
  "isNeg": function () {},
  "isNegative": function () {},
  "isZero": function () {},
  "lessThan": function () {},
  "lessThanOrEqualTo": function () {},
  "lt": function () {},
  "lte": function () {},
  "minus": function () {},
  "mod": function () {},
  "modulo": function () {},
  "mul": function () {},
  "neg": function () {},
  "negated": function () {},
  "plus": function () {},
  "pow": function () {},
  "precision": function () {},
  "round": function () {},
  "sd": function () {},
  "shift": function () {},
  "sqrt": function () {},
  "squareRoot": function () {},
  "sub": function () {},
  "times": function () {},
  "toDigits": function () {},
  "toExponential": function () {},
  "toFixed": function () {},
  "toFormat": function () {},
  "toFraction": function () {},
  "toJSON": function () {},
  "toNumber": function () {},
  "toPower": function () {},
  "toPrecision": function () {},
  "toString": function () {},
  "trunc": function () {},
  "truncated": function () {},
  "valueOf": function () {}
};
/**********************************************************************
 * End Generated Extern for BigNumber
/**********************************************************************/
